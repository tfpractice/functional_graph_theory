"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var isIterable=function(n){return!!n[Symbol.iterator]},iterify=function(n){return isIterable(n)?n:[n]},isRemovable=function(n){return!!n.delete},isHasable=function(n){return!!n.has},removify=function(n){return isRemovable(n)?n:new Set(iterify(n))},hasify=function(n){return isHasable(n)?n:new Set(iterify(n))},slicedToArray=function(){function n(n,r){var t=[],e=!0,o=!1,i=void 0;try{for(var a,u=n[Symbol.iterator]();!(e=(a=u.next()).done)&&(t.push(a.value),!r||t.length!==r);e=!0);}catch(n){o=!0,i=n}finally{try{!e&&u.return&&u.return()}finally{if(o)throw i}}return t}return function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return n(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toConsumableArray=function(n){if(Array.isArray(n)){for(var r=0,t=Array(n.length);r<n.length;r++)t[r]=n[r];return t}return Array.from(n)},spread=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return[].concat(toConsumableArray(iterify(n)))},spreadK=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).keys())},spreadV=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).values())},spreadE=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).entries())},spreadKV=spreadE,tuple=function(n){return function(r){return[r,n]}},triple=function(n){return function(r){return function(t){return[r,t,n]}}},flatten=function(n){return function(r){return[].concat(toConsumableArray(iterify(n)),toConsumableArray(iterify(r)))}},flattenBin=function(n,r){return flatten(n)(r)},flatTuple=function(n){return function(r){return[n].concat(toConsumableArray(iterify(r)))}},append=function(n){return function(r){return[].concat(toConsumableArray(iterify(n)),[r])}},has=function(n){return function(r){return hasify(n).has(r)}},hasK=function(n){return function(r){return has(spreadK(n))(r)}},xhasK=function(n){return function(r){return!hasK(n)(r)}},hasKV=function(n){return function(r){var t=slicedToArray(r,2),e=t[0];t[1];return hasK(n)(e)}},xhasKV=function(n){return function(r){var t=slicedToArray(r,2),e=t[0],o=t[1];return!hasKV(n)([e,o])}},asSet=function(n){return new Set(spread(n))},asMap=function(n){return new Map(spreadKV(n))},addBinSet=function(n,r){return new Set(append(n)(r))},addBinMap=function(n,r){return new Map(append(n)(r))},removeBin=function(n,r){return removify(n).delete(r)?n:n},diff=function(n){return function(r){return spread(n).filter(xhasK(r))}},mapDiff=function(n){return function(r){return spread(n).filter(xhasKV(r)).reduce(addBinMap,new Map)}},uniteMap=function(n){return function(r){return spread(mapDiff(r)(n)).reduce(addBinMap,n)}},addMap=function(n){return function(r){return function(t){return asMap(n).set(r,t)}}},addSet=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(addBinSet,n)}},removeMap=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(removeBin,asMap(n))}},popElem=function(n){return function(r){return removeBin(n,r)&&r}},popFirst=function(n){return popElem(n)(spread(n).shift())},get$1=function(n){return function(r){return asMap(n).get(r)}},first=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(n).shift()},last=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(n).pop()},lastK=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return last(spreadK(n))},components=function(n){var r=function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Set,e=arguments[1];return diff(spreadK(n.get(e)))(t).reduce(r,addSet(t)(e))},t=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,t=arguments[1];return diff(r(new Set,t))(n).map(tuple(r(new Set,t))).reduce(addBinMap,n)};return spreadK(n).reduce(t,new Map)},componentSet=function(n){return new Set(spreadV(components(n)))},components$1=Object.freeze({components:components,componentSet:componentSet}),slicedToArray$1=function(){function n(n,r){var t=[],e=!0,o=!1,i=void 0;try{for(var a,u=n[Symbol.iterator]();!(e=(a=u.next()).done)&&(t.push(a.value),!r||t.length!==r);e=!0);}catch(n){o=!0,i=n}finally{try{!e&&u.return&&u.return()}finally{if(o)throw i}}return t}return function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return n(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),resetNodeBin=function(n,r){return addMap(n)(r)(asMap())},addNodeBin=function(n,r){return addMap(n)(r)(get$1(n)(r))},neighborPairs=function(n){return function(r){return spreadK(get$1(n)(r)).map(append(r))}},addEdgeBin=function(n,r){var t=slicedToArray$1(r,3),e=t[0],o=t[1],i=t[2],a=void 0===i?0:i;return[[e,addMap(get$1(n)(e))(o)(a)],[o,addMap(get$1(n)(o))(e)(a)]].reduce(addBinMap,asMap(n))},removeEdgeBin=function(n,r){var t=slicedToArray$1(r,2),e=t[0],o=t[1];return[[e,removeMap(get$1(n)(e))(o)],[o,removeMap(get$1(n)(o))(e)]].reduce(addBinMap,asMap(n))},disconnectNodeBin=function(n,r){return neighborPairs(n)(r).reduce(removeEdgeBin,asMap(n))},importEdgeBin=function(n,r){var t=slicedToArray$1(r,2),e=t[0],o=t[1];return spread(mapDiff(o)(get$1(n)(e))).map(flatTuple(e)).reduce(addEdgeBin,addNodeBin(n,e))},mergeEdgesBin=function(n,r){return spread(asMap(r)).reduce(importEdgeBin,n)},mergeNeighbors=uniteMap,spawn=function(n){return asMap(n)},copy=spawn,fromElements=function(){for(var n=arguments.length,r=Array(n),t=0;t<n;t++)r[t]=arguments[t];return r.reduce(addNodeBin,copy())},nodes=function(n){return spreadK(copy(n))},adj=function(n){return function(r){return asMap(get$1(n)(r))}},neighbors=function(n){return function(r){return nodes(adj(n)(r))}},contains=function(n){return function(r){return hasK(n)(r)}},isAdjacent=function(n){return function(r){return function(t){return contains(adj(n)(r))(t)}}},addNodes=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(addNodeBin,n)}},resetNodes=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(resetNodeBin,n)}},addEdges=function(n){return function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return function(){for(var e=arguments.length,o=Array(e),i=0;i<e;i++)o[i]=arguments[i];return o.map(triple(t)(r)).reduce(addEdgeBin,n)}}},removeEdges=function(n){return function(r){return function(){for(var t=arguments.length,e=Array(t),o=0;o<t;o++)e[o]=arguments[o];return e.map(tuple(r)).reduce(removeEdgeBin,n)}}},disconnectNodes=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(disconnectNodeBin,copy(n))}},removeNodes=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(removeBin,disconnectNodes(n).apply(void 0,t))}},mergeEdges=function(n){return function(){for(var r=arguments.length,t=Array(r),e=0;e<r;e++)t[e]=arguments[e];return t.reduce(mergeEdgesBin,n)}},addNeighbor=function(n){return function(r){return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return addBinMap(adj(n)(r),[t,e])}}},addEntry=function(n){return function(r){var t=slicedToArray$1(r,2),e=t[0],o=t[1],i=void 0===o?0:o;return addBinMap(n,[e,i])}},graph=Object.freeze({mergeNeighbors:mergeNeighbors,spawn:spawn,copy:copy,fromElements:fromElements,nodes:nodes,adj:adj,neighbors:neighbors,contains:contains,isAdjacent:isAdjacent,addNodes:addNodes,resetNodes:resetNodes,addEdges:addEdges,removeEdges:removeEdges,disconnectNodes:disconnectNodes,removeNodes:removeNodes,mergeEdges:mergeEdges,addNeighbor:addNeighbor,addEntry:addEntry}),autoSpread=function n(r){return isIterable(r)?spread(r).reduce(flattenBin,[]).map(n):r},superNode=function(n){return function(r){return asSet([n,r])}},combineNeighbors=function(n){return function(r){return function(t){return asSet(flatten(neighbors(n)(r))(neighbors(n)(t)))}}},combineAdj=function(n){return function(r){return function(t){return asMap(flatten(adj(n)(r))(adj(n)(t)))}}},superAdj=function(n){return function(r){return function(t){return[r,t].reduce(removeBin,combineAdj(n)(r)(t))}}},superEdge=function(n){return function(r){return function(t){return addMap()(superNode(r)(t))(superAdj(n)(r)(t))}}},contract=function(n){return function(r){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:first(neighbors(n)(r));return t?mergeEdges(removeNodes(n)(r,t))(superEdge(n)(r)(t)):n}}},contractBin=function(n,r){var t=slicedToArray$1(r,2),e=t[0],o=t[1];return contract(n)(e)(o)},contractSrc=function(n){return function(r){return neighborPairs(n)(r).reduce(contractBin,copy(n))}},contractNext=function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:first(nodes(n));return contract(copy(n))(r)()},contractAuto=function(n){return nodes(n).reduce(contractNext,n)},contractMin=function n(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return r.size>t?n(contractNext(r),t):copy(r)},contract$1=Object.freeze({autoSpread:autoSpread,superNode:superNode,combineNeighbors:combineNeighbors,combineAdj:combineAdj,superAdj:superAdj,superEdge:superEdge,contract:contract,contractBin:contractBin,contractSrc:contractSrc,contractNext:contractNext,contractAuto:contractAuto,contractMin:contractMin}),pathEntry=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return{pred:n,length:r,weight:t}},pathVal=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return{pred:n,length:r,weight:t}}}},appendPath=function(n){return function(r){return addMap(n)(r)(pathEntry(lastK(n),1,0))}},initPath=function(n){return appendPath()(n)},getWeight=function(n){var r=n.weight,t=void 0===r?0:r;return t},getLength=function(n){var r=n.length,t=void 0===r?1:r;return t},lastVal=function(n){return n.get(lastK(n))},lastWeight=function(n){return getWeight(lastVal(n))},lastLength=function(n){return getLength(lastVal(n))},nextWeight=function(n){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return lastWeight(n)+r}},nextLength=function(n){return lastLength(n)?lastLength(n)+1:1},nextPath=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1],t=slicedToArray$1(r,2),e=t[0],o=t[1],i=void 0===o?0:o;return n.set(e,pathVal(lastK(n))(nextLength(n))(nextWeight(n)(i)))},path=Object.freeze({pathEntry:pathEntry,appendPath:appendPath,initPath:initPath,getWeight:getWeight,getLength:getLength,lastVal:lastVal,lastWeight:lastWeight,lastLength:lastLength,nextWeight:nextWeight,nextLength:nextLength,nextPath:nextPath}),dfs=function(n){return function(r){var t=function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initPath(r),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[lastK(e),0],i=slicedToArray$1(o,2),a=i[0],u=i[1];return spread(mapDiff(n.get(a))(e)).reduce(t,nextPath(e,[a,u]))};return t(initPath(r))}},bfs=function(n){return function(r){var t=function r(t){return function(e){var o=popFirst(e),i=mapDiff(n.get(o))(t);return spread(i).reduce(nextPath,t),spreadK(i).reduce(addBinSet,e),e.size>0?r(t)(e):t}};return t(initPath(r))(asSet([r]))}},dijkstra=function(n){return function(r){for(var t=bfs(n)(r),e=asSet([r]),o=initPath(r);e.size>0;){var i=popFirst(e),a=n.get(i),u=o.get(i),c=u.length,d=u.weight,s=!0,f=!1,p=void 0;try{for(var g,h=a[Symbol.iterator]();!(s=(g=h.next()).done);s=!0){var l=slicedToArray$1(g.value,2),v=l[0],y=l[1],m=t.get(v)||{length:1,weight:0},S=(m.length,m.weight),b={pred:i,length:c+1,weight:d+y},A=d+y<S?b:m;o.has(v)||(e.add(v),o.set(v,A))}}catch(n){f=!0,p=n}finally{try{!s&&h.return&&h.return()}finally{if(f)throw p}}}return o}},pathBetween=function(n){return function(r){return function(t){return hasK(get$1(components(n))(r))(t)}}},search=Object.freeze({dfs:dfs,bfs:bfs,dijkstra:dijkstra,pathBetween:pathBetween}),redStr=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:" ",r=arguments[1],t=(arguments[2],arguments[3]);return r===last(t)?n.concat(r," "):n.concat(r," , ")},collString=function(n){return spread(n).reduce(redStr,"")},kString=function(n){return spreadK(n).reduce(redStr,"")},vString=function(n){return spreadV(n).reduce(redStr,"")},kvString=function(n){return spreadKV(n).reduce(redStr,"")},pathString=function(n){return" { "+spreadK(n).join(" => ")+" }"},edgeString=function(n){var r=slicedToArray$1(n,2),t=r[0],e=r[1];return"{ Edge "+t+" >> [ "+kString(e)+" ] } "},componentString=function(n){var r=slicedToArray$1(n,2),t=r[0],e=r[1];return"{ component "+t+" >> [ "+kString(e)+" ] } "},graphString=function(n){return spreadKV(n).reduce(function(n,r,t){var e=slicedToArray$1(r,2),o=e[0],i=e[1];return n+edgeString([o,i])},"Showing Edges\n")},showGraph=function(n){var r=n.edges;return graphString(r)},show=Object.freeze({redStr:redStr,collString:collString,kString:kString,vString:vString,kvString:kvString,pathString:pathString,edgeString:edgeString,componentString:componentString,graphString:graphString,showGraph:showGraph});exports.Components=components$1,exports.Contract=contract$1,exports.Graph=graph,exports.Path=path,exports.Search=search,exports.Show=show;
//# sourceMappingURL=bundle.cjs.js.map
