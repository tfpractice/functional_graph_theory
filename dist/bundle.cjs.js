"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var turmericUtils=require("turmeric-utils"),isIterable=function(r){return!!r[Symbol.iterator]},iterify=function(r){return isIterable(r)?r:[r]},isRemovable=function(r){return!!r.delete},isHasable=function(r){return!!r.has},removify=function(r){return isRemovable(r)?r:new Set(iterify(r))},hasify=function(r){return isHasable(r)?r:new Set(iterify(r))},slicedToArray=function(){function r(r,e){var t=[],n=!0,o=!1,i=void 0;try{for(var a,u=r[Symbol.iterator]();!(n=(a=u.next()).done)&&(t.push(a.value),!e||t.length!==e);n=!0);}catch(r){o=!0,i=r}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return t}return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return r(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toConsumableArray=function(r){if(Array.isArray(r)){for(var e=0,t=Array(r.length);e<r.length;e++)t[e]=r[e];return t}return Array.from(r)},spread=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return[].concat(toConsumableArray(iterify(r)))},spreadK=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(r).keys())},spreadE=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(r).entries())},spreadKV=spreadE,flatTuple=function(r){return function(e){return[r].concat(toConsumableArray(iterify(e)))}},append=function(r){return function(e){return[].concat(toConsumableArray(iterify(r)),[e])}},has=function(r){return function(e){return hasify(r).has(e)}},hasK=function(r){return function(e){return has(spreadK(r))(e)}},hasKV=function(r){return function(e){var t=slicedToArray(e,2),n=t[0];t[1];return hasK(r)(n)}},xhasKV=function(r){return function(e){var t=slicedToArray(e,2),n=t[0],o=t[1];return!hasKV(r)([n,o])}},asMap=function(r){return new Map(spreadKV(r))},addBinMap=function(r,e){return new Map(append(r)(e))},removeBin=function(r,e){return removify(r).delete(e)?r:r},mapDiff=function(r){return function(e){return spread(r).filter(xhasKV(e)).reduce(addBinMap,new Map)}},addMap=function(r){return function(e){return function(t){return asMap(r).set(e,t)}}},removeMap=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(removeBin,asMap(r))}},get$1=function(r){return function(e){return asMap(r).get(e)}},slicedToArray$1=function(){function r(r,e){var t=[],n=!0,o=!1,i=void 0;try{for(var a,u=r[Symbol.iterator]();!(n=(a=u.next()).done)&&(t.push(a.value),!e||t.length!==e);n=!0);}catch(r){o=!0,i=r}finally{try{!n&&u.return&&u.return()}finally{if(o)throw i}}return t}return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return r(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toConsumableArray$1=function(r){if(Array.isArray(r)){for(var e=0,t=Array(r.length);e<r.length;e++)t[e]=r[e];return t}return Array.from(r)},resetNodeBin=function(r,e){return addMap(r)(e)(new Map)},addNodeBin=function(r,e){return addMap(r)(e)(get$1(r)(e))},removeNodeBin=function(r,e){return addMap(r)(e)(new Map(get$1(r)(e)))},neighborPairs=function(r){return function(e){return spreadK(get$1(r)(e)).map(append(e))}},addEdgeBin=function(r,e){var t=slicedToArray$1(e,3),n=t[0],o=t[1],i=t[2],a=void 0===i?0:i;return[[n,addMap(get$1(r)(n))(o)(a)],[o,addMap(get$1(r)(o))(n)(a)]].reduce(addBinMap,new Map(r))},removeEdgeBin=function(r,e){var t=slicedToArray$1(e,2),n=t[0],o=t[1];return[[n,removeMap(get$1(r)(n))(o)],[o,removeMap(get$1(r)(o))(n)]].reduce(addBinMap,new Map(r))},importEdgeBin=function(r,e){var t=slicedToArray$1(e,2),n=t[0],o=t[1];return spread(mapDiff(o)(get$1(r)(n))).map(flatTuple(n)).reduce(addEdgeBin,addNodeBin(r,n))},disconnectNodeBin2=function(r,e){return neighborPairs(r)(e).reduce(removeEdgeBin,asMap(r))},mergeEdgesBin=function(r,e){return spread(new Map(e)).reduce(importEdgeBin,r)},triple$1=turmericUtils.collections.triple,tuple$1=turmericUtils.collections.tuple,get$1$1=turmericUtils.collections.get,spreadK$1=turmericUtils.collections.spreadK,hasK$1=turmericUtils.collections.hasK,addBinMap$1=turmericUtils.collections.addBinMap,removeBin$1=turmericUtils.collections.removeBin,uniteMap$1=turmericUtils.collections.uniteMap,spawn=function(r){return new Map(r)},copy=spawn,fromElements=function(){for(var r=arguments.length,e=Array(r),t=0;t<r;t++)e[t]=arguments[t];return e.reduce(addNodeBin,copy())},nodes=function(r){return spreadK$1(copy(r))},adj=function(r){return function(e){return copy(get$1$1(r)(e))}},neighbors=function(r){return function(e){return nodes(adj(r)(e))}},contains=function(r){return function(e){return hasK$1(r)(e)}},isAdjacent=function(r){return function(e){return function(t){return contains(adj(r)(e))(t)}}},kvPair=function(r){return function(e){return[r,e]}},nodeNeighbors=function(r){return function(e){return neighbors(r)(e).map(kvPair(e))}},addNodes=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(addNodeBin,r)}},resetNodes=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(resetNodeBin,r)}},addEdges=function(r){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return function(){for(var n=arguments.length,o=Array(n),i=0;i<n;i++)o[i]=arguments[i];return o.map(triple$1(t)(e)).reduce(addEdgeBin,r)}}},removeEdges=function(r){return function(e){return function(){for(var t=arguments.length,n=Array(t),o=0;o<t;o++)n[o]=arguments[o];return n.map(tuple$1(e)).reduce(removeEdgeBin,r)}}},disconnectNodeBin=function(r,e){return removeEdges(r)(e).apply(void 0,toConsumableArray$1(neighbors(r)(e)))},disconnectNodes=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(disconnectNodeBin,copy(r))}},removeNodes=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(removeBin$1,disconnectNodes(r).apply(void 0,t))}},mergeEdges=function(r){return function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.reduce(mergeEdgesBin,r)}},addNeighbor=function(r){return function(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return addBinMap$1(adj(r)(e),[t,n])}}},addEntry=function(r){return function(e){var t=slicedToArray$1(e,2),n=t[0],o=t[1],i=void 0===o?0:o;return addBinMap$1(r,[n,i])}},mergeNeighbors=uniteMap$1,addBinSet$1=turmericUtils.collections.addBinSet,lastK$1=turmericUtils.collections.lastK,hasK$2=turmericUtils.collections.hasK,mapDiff$1=turmericUtils.collections.mapDiff,diff$1=turmericUtils.collections.diff,addBinMap$2=turmericUtils.collections.addBinMap,spread$1=turmericUtils.collections.spread,spreadK$2=turmericUtils.collections.spreadK,spreadV$1=turmericUtils.collections.spreadV,popFirst$1=turmericUtils.collections.popFirst,tuple$2=turmericUtils.collections.tuple,pathVal=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return{pred:r,length:e,weight:t}}}},addSrc=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map;return function(e){return r.set(e,{pred:lastK$1(r),weight:0,length:1})}},initPath=function(r){return addSrc()(r)},ptW=function(r){var e=r.weight,t=void 0===e?0:e;return t},ptL=function(r){var e=r.length,t=void 0===e?1:e;return t},lastVal=function(r){return r.get(lastK$1(r))},lastW=function(r){return ptW(lastVal(r))},lastL=function(r){return ptL(lastVal(r))},nextW=function(r){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return lastW(r)+e}},nextL=function(r){return lastL(r)?lastL(r)+1:1},nextPath=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,e=arguments[1],t=slicedToArray$1(e,2),n=t[0],o=t[1],i=void 0===o?0:o;return r.set(n,pathVal(lastK$1(r))(nextL(r))(nextW(r)(i)))},dfs=function(r){return function(e){var t=function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initPath(e),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[lastK$1(n),0],i=slicedToArray$1(o,2),a=i[0],u=i[1];return spread$1(mapDiff$1(r.get(a))(n)).reduce(t,nextPath(n,[a,u]))};return t(initPath(e))}},bfs=function(r){return function(e){var t=function e(t){return function(n){var o=popFirst$1(n),i=mapDiff$1(r.get(o))(t);return spread$1(i).reduce(nextPath,t),spreadK$2(i).reduce(addBinSet$1,n),n.size>0?e(t)(n):t}};return t(initPath(e))(new Set([e]))}},dijkstra=function(r){return function(e){for(var t=bfs(r)(e),n=new Set([e]),o=initPath(e);n.size>0;){var i=popFirst$1(n),a=r.get(i),u=o.get(i),c=u.length,s=u.weight,d=!0,p=!1,l=void 0;try{for(var f,g=a[Symbol.iterator]();!(d=(f=g.next()).done);d=!0){var h=slicedToArray$1(f.value,2),m=h[0],v=h[1],$=t.get(m)||{length:1,weight:0},y=($.length,$.weight),x={pred:i,length:c+1,weight:s+v},B=s+v<y?x:$;o.has(m)||(n.add(m),o.set(m,B))}}catch(r){p=!0,l=r}finally{try{!d&&g.return&&g.return()}finally{if(p)throw l}}}return o}},components=function(r){var e=function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Set,n=arguments[1];return diff$1(spreadK$2(r.get(n)))(t).reduce(e,t.add(n))},t=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,t=arguments[1];return diff$1(e(new Set,t))(r).map(tuple$2(e(new Set,t))).reduce(addBinMap$2,r)};return spreadK$2(r).reduce(t,new Map)},componentSet=function(r){return new Set(spreadV$1(components(r)))},pathBetween=function(r){return function(e){return function(t){return hasK$2(components(r).get(t))(e)}}},spread$2=turmericUtils.collections.spread,spreadK$3=turmericUtils.collections.spreadK,spreadV$2=turmericUtils.collections.spreadV,spreadKV$1=turmericUtils.collections.spreadKV,last$1=turmericUtils.collections.last,redStr=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:" ",e=arguments[1],t=(arguments[2],arguments[3]);return e===last$1(t)?r.concat(e," "):r.concat(e," , ")},collString=function(r){return spread$2(r).reduce(redStr,"")},kString=function(r){return spreadK$3(r).reduce(redStr,"")},vString=function(r){return spreadV$2(r).reduce(redStr,"")},kvString=function(r){return spreadKV$1(r).reduce(redStr,"")},pathString=function(r){return" { "+spreadK$3(r).join(" => ")+" }"},edgeString=function(r){var e=slicedToArray$1(r,2),t=e[0],n=e[1];return"{ Edge "+t+" >> [ "+kString(n)+" ] } "},componentString=function(r){var e=slicedToArray$1(r,2),t=e[0],n=e[1];return"{ component "+t+" >> [ "+kString(n)+" ] } "},graphString=function(r){return spreadKV$1(r).reduce(function(r,e,t){var n=slicedToArray$1(e,2),o=n[0],i=n[1];return r+edgeString([o,i])},"Showing Edges\n")},showGraph=function(r){var e=r.edges;return graphString(e)},flatten$2=turmericUtils.collections.flatten,spread$3=turmericUtils.collections.spread,first$1=turmericUtils.collections.first,removeBin$2=turmericUtils.collections.removeBin,addMap$1=turmericUtils.collections.addMap,flattenBin$2=function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return flatten$2(r)(e)},autoSpread=function r(e){return e[Symbol.iterator]?spread$3(e).reduce(flattenBin$2,[]).map(r):e},superNode=function(r){return function(e){return new Set([r,e])}},combineNeighbors=function(r){return function(e){return function(t){return new Set(flatten$2(neighbors(r)(e))(neighbors(r)(t)))}}},combineAdj=function(r){return function(e){return function(t){return new Map(flatten$2(adj(r)(e))(adj(r)(t)))}}},superAdj=function(r){return function(e){return function(t){return[e,t].reduce(removeBin$2,combineAdj(r)(e)(t))}}},superEdge=function(r){return function(e){return function(t){return addMap$1()(superNode(e)(t))(superAdj(r)(e)(t))}}},contract=function(r){return function(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:first$1(neighbors(r)(e));return t?mergeEdges(removeNodes(r)(e,t))(superEdge(r)(e)(t)):r}}},contractBin=function(r,e){var t=slicedToArray$1(e,2),n=t[0],o=t[1];return contract(r)(n)(o)},contractSrc=function(r){return function(e){return nodeNeighbors(r)(e).reduce(contractBin,copy(r))}},contractNext=function(r){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:first$1(nodes(r));return contract(copy(r))(e)()},contractAuto=function(r){return nodes(r).reduce(contractNext,r)},contractMin=function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return e.size>t?r(contractNext(e),t):copy(e)},operations=Object.freeze({autoSpread:autoSpread,superNode:superNode,combineNeighbors:combineNeighbors,combineAdj:combineAdj,superAdj:superAdj,superEdge:superEdge,contract:contract,contractBin:contractBin,contractSrc:contractSrc,contractNext:contractNext,contractAuto:contractAuto,contractMin:contractMin});exports.default=fromElements,exports.Operations=operations,exports.resetNodeBin=resetNodeBin,exports.addNodeBin=addNodeBin,exports.removeNodeBin=removeNodeBin,exports.neighborPairs=neighborPairs,exports.addEdgeBin=addEdgeBin,exports.removeEdgeBin=removeEdgeBin,exports.importEdgeBin=importEdgeBin,exports.disconnectNodeBin2=disconnectNodeBin2,exports.mergeEdgesBin=mergeEdgesBin,exports.spawn=spawn,exports.copy=copy,exports.fromElements=fromElements,exports.nodes=nodes,exports.adj=adj,exports.neighbors=neighbors,exports.contains=contains,exports.isAdjacent=isAdjacent,exports.kvPair=kvPair,exports.nodeNeighbors=nodeNeighbors,exports.addNodes=addNodes,exports.resetNodes=resetNodes,exports.addEdges=addEdges,exports.removeEdges=removeEdges,exports.disconnectNodeBin=disconnectNodeBin,exports.disconnectNodes=disconnectNodes,exports.removeNodes=removeNodes,exports.mergeEdges=mergeEdges,exports.addNeighbor=addNeighbor,exports.addEntry=addEntry,exports.mergeNeighbors=mergeNeighbors,exports.initPath=initPath,exports.ptW=ptW,exports.ptL=ptL,exports.lastVal=lastVal,exports.lastW=lastW,exports.lastL=lastL,exports.nextW=nextW,exports.nextL=nextL,exports.nextPath=nextPath,exports.dfs=dfs,exports.bfs=bfs,exports.dijkstra=dijkstra,exports.components=components,exports.componentSet=componentSet,exports.pathBetween=pathBetween,exports.redStr=redStr,exports.collString=collString,exports.kString=kString,exports.vString=vString,exports.kvString=kvString,exports.pathString=pathString,exports.edgeString=edgeString,exports.componentString=componentString,exports.graphString=graphString,exports.showGraph=showGraph;
//# sourceMappingURL=bundle.cjs.js.map
