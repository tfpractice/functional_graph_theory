"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var isIterable=function(n){return!!n[Symbol.iterator]},iterify=function(n){return isIterable(n)?n:[n]},isRemovable=function(n){return!!n.delete},isHasable=function(n){return!!n.has},removify=function(n){return isRemovable(n)?n:new Set(iterify(n))},hasify=function(n){return isHasable(n)?n:new Set(iterify(n))},slicedToArray=function(){function n(n,e){var r=[],t=!0,o=!1,i=void 0;try{for(var a,u=n[Symbol.iterator]();!(t=(a=u.next()).done)&&(r.push(a.value),!e||r.length!==e);t=!0);}catch(n){o=!0,i=n}finally{try{!t&&u.return&&u.return()}finally{if(o)throw i}}return r}return function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return n(e,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toConsumableArray=function(n){if(Array.isArray(n)){for(var e=0,r=Array(n.length);e<n.length;e++)r[e]=n[e];return r}return Array.from(n)},spread=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return[].concat(toConsumableArray(iterify(n)))},spreadK=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).keys())},spreadV=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).values())},spreadE=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(iterify(n).entries())},spreadKV=spreadE,tuple=function(n){return function(e){return[e,n]}},triple=function(n){return function(e){return function(r){return[e,r,n]}}},flatten=function(n){return function(e){return[].concat(toConsumableArray(iterify(n)),toConsumableArray(iterify(e)))}},flattenBin=function(n,e){return flatten(n)(e)},flatTuple=function(n){return function(e){return[n].concat(toConsumableArray(iterify(e)))}},append=function(n){return function(e){return[].concat(toConsumableArray(iterify(n)),[e])}},has=function(n){return function(e){return hasify(n).has(e)}},hasK=function(n){return function(e){return has(spreadK(n))(e)}},xhasK=function(n){return function(e){return!hasK(n)(e)}},hasKV=function(n){return function(e){var r=slicedToArray(e,2),t=r[0];r[1];return hasK(n)(t)}},xhasKV=function(n){return function(e){var r=slicedToArray(e,2),t=r[0],o=r[1];return!hasKV(n)([t,o])}},asSet=function(n){return new Set(spread(n))},asMap=function(n){return new Map(spreadKV(n))},addBinSet=function(n,e){return new Set(append(n)(e))},addBinMap=function(n,e){return new Map(append(n)(e))},removeBin=function(n,e){return removify(n).delete(e)?n:n},diff=function(n){return function(e){return spread(n).filter(xhasK(e))}},mapDiff=function(n){return function(e){return spread(n).filter(xhasKV(e)).reduce(addBinMap,new Map)}},uniteMap=function(n){return function(e){return spread(mapDiff(e)(n)).reduce(addBinMap,n)}},addMap=function(n){return function(e){return function(r){return asMap(n).set(e,r)}}},addSet=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(addBinSet,n)}},removeMap=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(removeBin,asMap(n))}},popElem=function(n){return function(e){return removeBin(n,e)&&e}},popFirst=function(n){return popElem(n)(spread(n).shift())},get$1=function(n){return function(e){return asMap(n).get(e)}},first=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(n).shift()},last=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return spread(n).pop()},lastK=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return last(spreadK(n))},slicedToArray$1=function(){function n(n,e){var r=[],t=!0,o=!1,i=void 0;try{for(var a,u=n[Symbol.iterator]();!(t=(a=u.next()).done)&&(r.push(a.value),!e||r.length!==e);t=!0);}catch(n){o=!0,i=n}finally{try{!t&&u.return&&u.return()}finally{if(o)throw i}}return r}return function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return n(e,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),resetNodeBin=function(n,e){return addMap(n)(e)(asMap())},addNodeBin=function(n,e){return addMap(n)(e)(get$1(n)(e))},neighborPairs=function(n){return function(e){return spreadK(get$1(n)(e)).map(append(e))}},addEdgeBin=function(n,e){var r=slicedToArray$1(e,3),t=r[0],o=r[1],i=r[2],a=void 0===i?0:i;return[[t,addMap(get$1(n)(t))(o)(a)],[o,addMap(get$1(n)(o))(t)(a)]].reduce(addBinMap,asMap(n))},removeEdgeBin=function(n,e){var r=slicedToArray$1(e,2),t=r[0],o=r[1];return[[t,removeMap(get$1(n)(t))(o)],[o,removeMap(get$1(n)(o))(t)]].reduce(addBinMap,asMap(n))},disconnectNodeBin=function(n,e){return neighborPairs(n)(e).reduce(removeEdgeBin,asMap(n))},removeNodeBin=function(n,e){return removeMap(disconnectNodeBin(n,e))(e)},importEdgeBin=function(n,e){var r=slicedToArray$1(e,2),t=r[0],o=r[1];return spread(mapDiff(o)(get$1(n)(t))).map(flatTuple(t)).reduce(addEdgeBin,addNodeBin(n,t))},mergeEdgesBin=function(n,e){return spread(asMap(e)).reduce(importEdgeBin,n)},mergeNeighbors=uniteMap,spawn=function(n){return asMap(n)},copy=spawn,fromElements=function(){for(var n=arguments.length,e=Array(n),r=0;r<n;r++)e[r]=arguments[r];return e.reduce(addNodeBin,copy())},nodes=function(n){return spreadK(copy(n))},adj=function(n){return function(e){return asMap(get$1(n)(e))}},neighbors=function(n){return function(e){return nodes(adj(n)(e))}},contains=function(n){return function(e){return hasK(n)(e)}},isAdjacent=function(n){return function(e){return function(r){return contains(adj(n)(e))(r)}}},addNodes=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(addNodeBin,n)}},resetNodes=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(resetNodeBin,n)}},addEdges=function(n){return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return function(){for(var t=arguments.length,o=Array(t),i=0;i<t;i++)o[i]=arguments[i];return o.map(triple(r)(e)).reduce(addEdgeBin,n)}}},removeEdges=function(n){return function(e){return function(){for(var r=arguments.length,t=Array(r),o=0;o<r;o++)t[o]=arguments[o];return t.map(tuple(e)).reduce(removeEdgeBin,n)}}},disconnectNodes=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(disconnectNodeBin,copy(n))}},removeNodes=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(removeBin,disconnectNodes(n).apply(void 0,r))}},mergeEdges=function(n){return function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return r.reduce(mergeEdgesBin,n)}},addNeighbor=function(n){return function(e){return function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return addBinMap(adj(n)(e),[r,t])}}},addEntry=function(n){return function(e){var r=slicedToArray$1(e,2),t=r[0],o=r[1],i=void 0===o?0:o;return addBinMap(n,[t,i])}},pathEntry=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return{pred:n,length:e,weight:r}},pathVal=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return{pred:n,length:e,weight:r}}}},appendPath=function(n){return function(e){return addMap(n)(e)(pathEntry(lastK(n),1,0))}},initPath=function(n){return appendPath()(n)},getWeight=function(n){var e=n.weight,r=void 0===e?0:e;return r},getLength=function(n){var e=n.length,r=void 0===e?1:e;return r},lastVal=function(n){return n.get(lastK(n))},lastWeight=function(n){return getWeight(lastVal(n))},lastLength=function(n){return getLength(lastVal(n))},nextWeight=function(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return lastWeight(n)+e}},nextLength=function(n){return lastLength(n)?lastLength(n)+1:1},nextPath=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,e=arguments[1],r=slicedToArray$1(e,2),t=r[0],o=r[1],i=void 0===o?0:o;return n.set(t,pathVal(lastK(n))(nextLength(n))(nextWeight(n)(i)))},components=function(n){var e=function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Set,t=arguments[1];return diff(spreadK(n.get(t)))(r).reduce(e,addSet(r)(t))},r=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Map,r=arguments[1];return diff(e(new Set,r))(n).map(tuple(e(new Set,r))).reduce(addBinMap,n)};return spreadK(n).reduce(r,new Map)},componentSet=function(n){return new Set(spreadV(components(n)))},dfs=function(n){return function(e){var r=function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initPath(e),o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[lastK(t),0],i=slicedToArray$1(o,2),a=i[0],u=i[1];return spread(mapDiff(n.get(a))(t)).reduce(r,nextPath(t,[a,u]))};return r(initPath(e))}},bfs=function(n){return function(e){var r=function e(r){return function(t){var o=popFirst(t),i=mapDiff(n.get(o))(r);return spread(i).reduce(nextPath,r),spreadK(i).reduce(addBinSet,t),t.size>0?e(r)(t):r}};return r(initPath(e))(asSet([e]))}},dijkstra=function(n){return function(e){for(var r=bfs(n)(e),t=asSet([e]),o=initPath(e);t.size>0;){var i=popFirst(t),a=n.get(i),u=o.get(i),c=u.length,d=u.weight,s=!0,f=!1,p=void 0;try{for(var g,l=a[Symbol.iterator]();!(s=(g=l.next()).done);s=!0){var h=slicedToArray$1(g.value,2),v=h[0],m=h[1],y=r.get(v)||{length:1,weight:0},x=(y.length,y.weight),S={pred:i,length:c+1,weight:d+m},B=d+m<x?S:y;o.has(v)||(t.add(v),o.set(v,B))}}catch(n){f=!0,p=n}finally{try{!s&&l.return&&l.return()}finally{if(f)throw p}}}return o}},pathBetween=function(n){return function(e){return function(r){return hasK(get$1(components(n))(e))(r)}}},redStr=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:" ",e=arguments[1],r=(arguments[2],arguments[3]);return e===last(r)?n.concat(e," "):n.concat(e," , ")},collString=function(n){return spread(n).reduce(redStr,"")},kString=function(n){return spreadK(n).reduce(redStr,"")},vString=function(n){return spreadV(n).reduce(redStr,"")},kvString=function(n){return spreadKV(n).reduce(redStr,"")},pathString=function(n){return" { "+spreadK(n).join(" => ")+" }"},edgeString=function(n){var e=slicedToArray$1(n,2),r=e[0],t=e[1];return"{ Edge "+r+" >> [ "+kString(t)+" ] } "},componentString=function(n){var e=slicedToArray$1(n,2),r=e[0],t=e[1];return"{ component "+r+" >> [ "+kString(t)+" ] } "},graphString=function(n){return spreadKV(n).reduce(function(n,e,r){var t=slicedToArray$1(e,2),o=t[0],i=t[1];return n+edgeString([o,i])},"Showing Edges\n")},showGraph=function(n){var e=n.edges;return graphString(e)},autoSpread=function n(e){return isIterable(e)?spread(e).reduce(flattenBin,[]).map(n):e},superNode=function(n){return function(e){return asSet([n,e])}},combineNeighbors=function(n){return function(e){return function(r){return asSet(flatten(neighbors(n)(e))(neighbors(n)(r)))}}},combineAdj=function(n){return function(e){return function(r){return asMap(flatten(adj(n)(e))(adj(n)(r)))}}},superAdj=function(n){return function(e){return function(r){return[e,r].reduce(removeBin,combineAdj(n)(e)(r))}}},superEdge=function(n){return function(e){return function(r){return addMap()(superNode(e)(r))(superAdj(n)(e)(r))}}},contract=function(n){return function(e){return function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:first(neighbors(n)(e));return r?mergeEdges(removeNodes(n)(e,r))(superEdge(n)(e)(r)):n}}},contractBin=function(n,e){var r=slicedToArray$1(e,2),t=r[0],o=r[1];return contract(n)(t)(o)},contractSrc=function(n){return function(e){return neighborPairs(n)(e).reduce(contractBin,copy(n))}},contractNext=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:first(nodes(n));return contract(copy(n))(e)()},contractAuto=function(n){return nodes(n).reduce(contractNext,n)},contractMin=function n(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return e.size>r?n(contractNext(e),r):copy(e)},contract$1=Object.freeze({autoSpread:autoSpread,superNode:superNode,combineNeighbors:combineNeighbors,combineAdj:combineAdj,superAdj:superAdj,superEdge:superEdge,contract:contract,contractBin:contractBin,contractSrc:contractSrc,contractNext:contractNext,contractAuto:contractAuto,contractMin:contractMin});exports.default=fromElements,exports.Operations=contract$1,exports.resetNodeBin=resetNodeBin,exports.addNodeBin=addNodeBin,exports.neighborPairs=neighborPairs,exports.addEdgeBin=addEdgeBin,exports.removeEdgeBin=removeEdgeBin,exports.disconnectNodeBin=disconnectNodeBin,exports.removeNodeBin=removeNodeBin,exports.importEdgeBin=importEdgeBin,exports.mergeEdgesBin=mergeEdgesBin,exports.mergeNeighbors=mergeNeighbors,exports.spawn=spawn,exports.copy=copy,exports.fromElements=fromElements,exports.nodes=nodes,exports.adj=adj,exports.neighbors=neighbors,exports.contains=contains,exports.isAdjacent=isAdjacent,exports.addNodes=addNodes,exports.resetNodes=resetNodes,exports.addEdges=addEdges,exports.removeEdges=removeEdges,exports.disconnectNodes=disconnectNodes,exports.removeNodes=removeNodes,exports.mergeEdges=mergeEdges,exports.addNeighbor=addNeighbor,exports.addEntry=addEntry,exports.dfs=dfs,exports.bfs=bfs,exports.dijkstra=dijkstra,exports.pathBetween=pathBetween,exports.redStr=redStr,exports.collString=collString,exports.kString=kString,exports.vString=vString,exports.kvString=kvString,exports.pathString=pathString,exports.edgeString=edgeString,exports.componentString=componentString,exports.graphString=graphString,exports.showGraph=showGraph,exports.components=components,exports.componentSet=componentSet,exports.pathEntry=pathEntry,exports.appendPath=appendPath,exports.initPath=initPath,exports.getWeight=getWeight,exports.getLength=getLength,exports.lastVal=lastVal,exports.lastWeight=lastWeight,exports.lastLength=lastLength,exports.nextWeight=nextWeight,exports.nextLength=nextLength,exports.nextPath=nextPath;
//# sourceMappingURL=bundle.cjs.js.map
