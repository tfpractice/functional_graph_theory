{"version":3,"file":null,"sources":["../src/reducers.js","../src/graph.js","../src/traversals.js","../src/index.js"],"sourcesContent":["import { collections as coll, } from 'turmeric';\n\nconst { spread, addMap, get, spreadK, flatTuple, mapDiff, removeMap } = coll;\n\nexport const set = m => k => v => new Map(m).set(k, v);\n\nexport const nabeMap = edges => src => new Map(get(edges)(src));\nexport const nabes = (edges = new Map) => src => spreadK(nabeMap(edges)(src));\nexport const addSrc = (edges, src) => addMap(edges)(src)(nabeMap(edges)(src));\n\nexport const addEdgeBin = (edges = new Map, [ src, nb, wt = 0 ]) => edges\n  .set(src, addMap(nabeMap(edges)(src))(nb)(wt))\n  .set(nb, addMap(nabeMap(edges)(nb))(src)(wt));\n\nexport const rmEdgeBin = (edges = new Map, [ src, nb, wt = 0 ]) => edges\n  .set(src, removeMap(edges.get(src))(nb))\n  .set(nb, removeMap(edges.get(src))(src));\n\nexport const clearNeighborsBin = (edges = new Map, src) =>\n  edges.set(src, new Map);\n\nexport const importEdgeBin = (edges = new Map, [ src, nbs ] = [ , new Map ]) =>\n   spread(mapDiff(nbs)(edges.get(src))).map(flatTuple(src)).reduce(addEdgeBin, addSrc(edges, src));\n","import { collections, } from 'turmeric';\nimport { addEdgeBin, addSrc, clearNeighborsBin, importEdgeBin, rmEdgeBin, } from './reducers';\n\nconst { spread, triple, spreadK, hasK, } = collections;\nconst { asMap, addBinMap, removeBin, uniteMap, } = collections;\n\nexport const spawn = edges => new Map(edges);\nexport const copy = spawn;\nexport const fromElements = (...elements) => elements.reduce(addSrc, spawn());\nexport const nodes = edges => spreadK(new Map(edges));\nexport const adj = edges => src => new Map(edges.get(src));\nexport const neighbors = edges => src => nodes(adj(edges)(src));\nexport const contains = edges => node => hasK(edges)(node);\nexport const isAdjacent = edges => src => nabe =>\n  contains(adj(edges)(src))(nabe);\n\nexport const addNodes = edges => (...srcs) => srcs.reduce(addSrc, edges);\nexport const removeNodes = edges => (...srcs) => srcs.reduce(removeBin, edges);\n\nexport const addEdges = edges => (src, w = 0) => (...nabes) =>\n  nabes.map(triple(w)(src)).reduce(addEdgeBin, edges);\n\nexport const removeEdges = edges => src => (...nabes) =>\n  nabes.map(triple(0)(src)).reduce(rmEdgeBin, edges);\n\nexport const mergeEdges = (edges = new Map) => (altEdges = new Map) =>\n new Map(spread(altEdges).reduce(importEdgeBin, edges));\n\nexport const addNeighbor = edges => src => (n, w = 0) =>\n  addBinMap(adj(edges)(src), [ n, w ]);\n\nexport const addEntry = nabes => ([ n, w = 0 ]) => addBinMap(nabes, [ n, w ]);\n\nexport const clearNeighbors = (edges = new Map) => (...srcs) =>\n  srcs.reduce(clearNeighborsBin, edges);\n\nexport const mergeNeighbors = uniteMap;\n","import { collections, } from 'turmeric';\n\nconst { addSet, lastK, hasK, mapDiff, diff, addBinMap, } = collections;\nconst { spread, spreadK, spreadV, popFirst, tuple, } = collections;\n\nconst pathVal = (pred = null) => (length = 1) => (weight = 0) =>\n  ({ pred, length, weight });\n\nconst addSrc = (path = new Map) => src =>\n  path.set(src, { pred: lastK(path), weight: 0, length: 1 });\n\nconst initPath = node => addSrc()(node);\nconst ptW = ({ weight = 0 }) => weight;\nconst ptL = ({ length = 1 }) => length;\nconst lastVal = path => path.get(lastK(path));\nconst lastW = path => ptW(lastVal(path));\nconst lastL = path => ptL(lastVal(path));\nconst nextW = path => (w = 0) => lastW(path) + w;\nconst nextL = path => lastL(path) ? lastL(path) + 1 : 1;\n\nconst nextPath = (path = new Map, [ n, w = 0 ]) =>\n  path.set(n, pathVal(lastK(path))(nextL(path))(nextW(path)(w)));\n\nexport const dfs = edges => (src) => {\n  const trav = (path = initPath(src), [ n, w ] = [ lastK(path), 0 ]) =>\n    spread(mapDiff(edges.get(n))(path)).reduce(trav, nextPath(path, [ n, w ]));\n\n  return trav(initPath(src));\n};\n\nexport const bfs = edges => (iNode) => {\n  const bVisit = bPath => (bQueue) => {\n    const pred = popFirst(bQueue);\n    const nextNabes = mapDiff(edges.get(pred))(bPath);\n\n    spread(nextNabes).reduce(nextPath, bPath);\n    spreadK(nextNabes).reduce(addSet, bQueue);\n    return bQueue.size > 0 ? bVisit(bPath)(bQueue) : bPath;\n  };\n\n  return bVisit(initPath(iNode))(new Set([ iNode ]));\n};\n\nexport const dijkstra = edges => (iNode) => {\n  const reachables = bfs(edges)(iNode);\n  const inspectQueue = new Set([ iNode ]);\n  const solutionSet = initPath(iNode);\n\n  while (inspectQueue.size > 0) {\n    const pred = popFirst(inspectQueue);\n    const nextNabes = edges.get(pred);\n    const { length: dCount, weight: dWeight } = solutionSet.get(pred);\n\n    for (const [ nabe, nWeight ] of nextNabes) {\n      const prevMap = reachables.get(nabe) || { length: 1, weight: 0 };\n      const { length: rCount, weight: rWeight } = prevMap;\n      const dMap = { pred, length: dCount + 1, weight: dWeight + nWeight, };\n      const sMap = ((dWeight + nWeight) < rWeight) ? dMap : prevMap;\n\n      if (!solutionSet.has(nabe)) {\n        inspectQueue.add(nabe);\n        solutionSet.set(nabe, sMap);\n      }\n    }\n  }\n\n  return solutionSet;\n};\n\nexport const components = (edges) => {\n  const trav = (comp = new Set, node) =>\n     diff(spreadK(edges.get(node)))(comp).reduce(trav, comp.add(node));\n  const visitMap = (mMap = new Map, node) =>\n     diff(trav(new Set, node))(mMap).map(tuple(trav(new Set, node)))\n       .reduce(addBinMap, mMap);\n\n  return spreadK(edges).reduce(visitMap, new Map);\n};\n\nexport const componentSet = edges => new Set(spreadV(components(edges)));\nexport const pathBetween = edges => n0 => n1 =>\n  hasK(components(edges).get(n1))(n0);\n","import * as Reducers from './reducers';\nimport * as Graph from './graph';\nimport * as Traversals from './traversals';\n\nexport { Graph, Reducers, Traversals, };\n\n// exports.Graph = require('./graph');\n\n// exports.Reducers = require('./reducers');\n// exports.Utils = require('./utils');\n// exports.AsyncOps = require('./async_operators');\n\n// exports.Traversals = require('./traversals');\n"],"names":["spread","coll","addMap","get","spreadK","flatTuple","mapDiff","removeMap","set","Map","m","k","v","nabeMap","edges","src","nabes","addSrc","addEdgeBin","nb","wt","rmEdgeBin","clearNeighborsBin","importEdgeBin","nbs","map","reduce","collections","triple","hasK","addBinMap","removeBin","uniteMap","spawn","copy","fromElements","elements","nodes","adj","neighbors","contains","node","isAdjacent","nabe","addNodes","srcs","removeNodes","addEdges","w","removeEdges","mergeEdges","altEdges","addNeighbor","n","addEntry","clearNeighbors","mergeNeighbors","addSet","lastK","diff","spreadV","popFirst","tuple","pathVal","pred","length","weight","path","initPath","ptW","ptL","lastVal","lastW","lastL","nextW","nextL","nextPath","dfs","trav","bfs","iNode","bVisit","bQueue","nextNabes","bPath","size","Set","dijkstra","reachables","inspectQueue","solutionSet","dCount","dWeight","nWeight","prevMap","rCount","rWeight","dMap","sMap","has","add","components","comp","visitMap","mMap","componentSet","pathBetween","n1","n0"],"mappings":"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"}