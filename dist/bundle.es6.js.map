{"version":3,"file":null,"sources":["../src/reducers.js","../src/graph.js","../src/traversals.js","../src/index.js","../index.js"],"sourcesContent":["import { collections, } from 'turmeric';\n\nconst { spread, tuple, addMap, get, spreadK, flatTuple, } = collections;\nconst { uniteMap, mapDiff, mapUnion, diff } = collections;\nconst { asMap, addBinMap, removeBinTuple, removeMap, removeBin } = collections;\n\nexport const set = m => k => v => new Map(m).set(k, v);\n\nexport const nabeMap = edges => src => new Map(get(edges)(src));\nexport const nabes = (edges = new Map) => src => spreadK(nabeMap(edges)(src));\nexport const addSrc = (edges, src) => addMap(edges)(src)(nabeMap(edges)(src));\n\nexport const addEdgeBin = (edges = new Map, [ src, nb, wt = 0 ]) =>\n   edges\n     .set(src, addMap(nabeMap(edges)(src))(nb)(wt))\n     .set(nb, addMap(nabeMap(edges)(nb))(src)(wt));\n\nexport const rmEdgeBin = (edges = new Map, [ src, nb, wt = 0 ]) => edges\n  .set(src, removeMap(edges.get(src))(nb))\n  .set(nb, removeMap(edges.get(src))(src));\n\nexport const clearNeighborsBin = (edges = new Map, src) =>\n  edges.set(src, new Map);\n\nexport const importEdgeBin = (edges = new Map, [ src, nbs ] = [ , new Map ]) =>\n   spread(mapDiff(nbs)(edges.get(src))).map(flatTuple(src)).reduce(addEdgeBin, addSrc(edges, src));\n","import { collections, } from 'turmeric';\nimport { addEdgeBin, addSrc, clearNeighborsBin, importEdgeBin, rmEdgeBin, } from './reducers';\nconst { spread, spreadKV, tuple, triple, addMap, get, spreadK, flatTuple, hasK, } = collections;\nconst { uniteMap, mapDiff, mapUnion, diff } = collections;\nconst { asMap, addBinMap, removeBinTuple, removeMap, removeBin } = collections;\n\nexport const spawn = edges => new Map(edges);\nexport const copy = spawn;\nexport const fromElements = (...elements) => elements.reduce(addSrc, spawn());\nexport const nodes = edges => spreadK(asMap(edges));\nexport const adj = edges => src => edges.get(src) || new Map;\n\nexport const neighbors = edges => src => nodes(adj(edges)(src));\n\nexport const contains = edges => node => hasK(edges)(node);\n\nexport const isAdjacent = edges => src => nabe =>\n  contains(adj(edges)(src))(nabe);\n\nexport const addNodes = edges => (...srcs) => srcs.reduce(addSrc, edges);\n\nexport const removeNodes = edges => (...nodes) =>\n  nodes.reduce(removeBin, edges);\n\nexport const addEdges = edges => (src, w = 0) => (...nabes) =>\n  nabes.map(triple(w)(src)).reduce(addEdgeBin, edges);\n\nexport const removeEdges = edges => src => (...nabes) =>\n  nabes.map(triple(0)(src)).reduce(rmEdgeBin, edges);\n\nexport const mergeEdges = (edges = new Map) => (altEdges = new Map) => {\n  const rval = spread(altEdges).reduce(importEdgeBin, edges);\n\n  console.log('uniteMapedges(altEdges)', uniteMap(edges)(altEdges));\n\n  // console.log('rval', new Map(rval));\n  return new Map(spreadKV(altEdges).reduce(importEdgeBin, edges));\n};\n\nexport const addNeighbor = edges => src => (n, w = 0) =>\n  addBinMap(adj(edges)(src), [ n, w ]);\nexport const addEntry = nabes => ([ n, w = 0 ]) => addBinMap(nabes, [ n, w ]);\n\nexport const clearNeighbors = (edges = new Map) => (...nodes) =>\n  nodes.reduce(clearNeighborsBin, edges);\n\n//\n// export const clearEdges = (edges) => edges.clear;\n//\nexport const mergeNeighbors = uniteMap;\n\n// module.exports = {\n// \tspawn,\n// \tcontains,\n// \tnodes,\n// \tadj,\n// \tcopy,\n// \tisAdjacent,\n// \taddNodes,\n// \tremoveEdges,\n// \tremoveNodes,\n// \tneighbors,\n// \taddNeighbor,\n// \taddEdges,\n// \taddEdgeR,\n// \taddEntry,\n// \tclearNeighbors,\n// \tmergeNeighbors,\n// \tmergeEdges,\n// \tfromElements,\n// };\n","import { collections, } from 'turmeric';\nimport { addEdgeBin, clearNeighborsBin, importEdgeBin, rmEdgeBin, } from './reducers';\nconst { addMap, get, addSet } = collections;\nconst { lastK, hasK, xhasK, hasKV, xhasKV } = collections;\nconst { uniteMap, mapDiff, mapUnion, diff } = collections;\nconst { asMap, addBinMap, removeBinTuple, removeMap, removeBin } = collections;\nconst { spread, spreadK, spreadKV, popFirst, tuple, flatTuple, triple, } = collections;\n\nconst pathVal = (pred = null) => (length = 1) => (weight = 0) =>\n  ({ pred, length, weight });\n\nconst addSrc = (path = new Map) => src =>\n  path.set(src, { pred: lastK(path), weight: 0, length: 1 });\n\nconst initPath = node => addSrc()(node);\nconst ptW = ({ weight = 0 }) => weight;\nconst ptL = ({ length = 1 }) => length;\nconst lastVal = path => path.get(lastK(path));\nconst lastW = path => ptW(lastVal(path));\nconst lastL = path => ptL(lastVal(path));\nconst nextW = path => (w = 0) => lastW(path) + w;\nconst nextL = path => lastL(path) ? lastL(path) + 1 : 1;\n\nconst nextPath = (path = new Map, [ n, w = 0 ]) =>\n  path.set(n, pathVal(lastK(path))(nextL(path))(nextW(path)(w)));\n\nexport const dfs = edges => (src) => {\n  const trav = (path = initPath(src), [ n, w ] = [ lastK(path), 0 ]) =>\n    spread(mapDiff(edges.get(n))(path)).reduce(trav, nextPath(path, [ n, w ]));\n\n  return trav(initPath(src));\n};\n\nexport const bfs = edges => (iNode) => {\n  const bVisit = bPath => (bQueue) => {\n    const pred = popFirst(bQueue);\n    const nextNabes = mapDiff(edges.get(pred))(bPath);\n\n    spread(nextNabes).reduce(nextPath, bPath);\n    spreadK(nextNabes).reduce(addSet, bQueue);\n    return bQueue.size > 0 ? bVisit(bPath)(bQueue) : bPath;\n  };\n\n  return bVisit(initPath(iNode))(new Set([ iNode ]));\n};\n\nexport const dijkstra = edges => (iNode) => {\n  const reachables = bfs(edges)(iNode);\n  const inspectQueue = new Set([ iNode ]);\n  const solutionSet = initPath(iNode);\n\n  while (inspectQueue.size > 0) {\n    const pred = popFirst(inspectQueue);\n    const nextNabes = edges.get(pred);\n    let { length: dCount, weight: dWeight } = solutionSet.get(pred);\n\n    console.log('nextNabes', nextNabes);\n    console.log('reachables', reachables);\n    for (let [ nabe, nWeight ] of nextNabes) {\n      const prevMap = reachables.get(nabe);\n\n      console.log('reachables', reachables);\n      console.log('prevMap', prevMap);\n      let { length: rCount, weight: rWeight } = prevMap;\n      const dMap = { pred, length: dCount + 1, weight: dWeight + nWeight, };\n      const sMap = ((dWeight + nWeight) < rWeight) ? dMap : prevMap;\n\n      if (!solutionSet.has(nabe)) {\n        inspectQueue.add(nabe);\n        solutionSet.set(nabe, sMap);\n      }\n    }\n  }\n\n  return solutionSet;\n};\n\nexport const components = (edges) => {\n  const trav = (comp = new Set, node) =>\n    diff(spreadK(edges.get(node)))(comp).reduce(trav, comp.add(node));\n\n  const visitMap = (mMap = new Map, node) =>\n    diff(trav(new Set, node))(mMap)\n      .map(tuple(trav(new Set, node)))\n      .reduce(addMap, mMap);\n\n  return spreadK(edges).reduce(visitMap, new Map);\n};\n\nexport const componentSet = edges => new Set(spreadV(components(edges)));\nexport const pathBetween = edges => n0 => n1 =>\n  hasK(components(edges).get(n1))(n0);\n","import * as Reducers from './reducers';\nimport * as Graph from './graph';\nimport * as Traversals from './traversals';\n\nexport { Graph, Reducers, Traversals, };\n\n// exports.Graph = require('./graph');\n\n// exports.Reducers = require('./reducers');\n// exports.Utils = require('./utils');\n// exports.AsyncOps = require('./async_operators');\n\n// exports.Traversals = require('./traversals');\n","// require('babel-register');\n// module.exports = require('./src');\nimport * as src from './src';\nexport default src;\n"],"names":["spread","collections","addMap","get","spreadK","flatTuple","mapDiff","removeMap","set","Map","m","k","v","nabeMap","edges","src","nabes","addSrc","addEdgeBin","nb","wt","rmEdgeBin","clearNeighborsBin","importEdgeBin","nbs","map","reduce","spreadKV","tuple","triple","hasK","uniteMap","mapUnion","diff","asMap","addBinMap","removeBinTuple","removeBin","spawn","copy","fromElements","elements","nodes","adj","neighbors","contains","node","isAdjacent","nabe","addNodes","srcs","removeNodes","addEdges","w","removeEdges","mergeEdges","altEdges","rval","log","addNeighbor","n","addEntry","clearNeighbors","mergeNeighbors","addSet","lastK","popFirst","pathVal","pred","length","weight","path","initPath","ptW","ptL","lastVal","lastW","lastL","nextW","nextL","nextPath","dfs","trav","bfs","iNode","bVisit","bQueue","nextNabes","bPath","size","Set","dijkstra","reachables","inspectQueue","solutionSet","dCount","dWeight","nWeight","prevMap","rCount","rWeight","dMap","sMap","has","add","components","comp","visitMap","mMap","componentSet","spreadV","pathBetween","n1","n0"],"mappings":"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"}